// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Math.jack

/**
 * A library of commonly used mathematical functions.
 * Note: Jack compilers implement multiplication and division using OS method calls.
 */
class Math {
    static Array twoToThe;

    /** Initializes the library. */
    function void init() {
        var int i;
        let i = 1;

        let twoToThe = Array.new(16);
        let twoToThe[0] = 1;

        while (i < 16) {
            let twoToThe[i] = twoToThe[i-1] + twoToThe[i-1];
            let i = i + 1;
        }
        return;
    }

    /** Returns twoToThe[i]. */
    function int getTwoToThe(int i) {
        return twoToThe[i];
    }

    /** Returns true if the i-th bit of x is 1, false otherwise */
    function boolean bit(int x, int i) {
        if (x & twoToThe[i] = 0) {
            return false;
        }
        else {
            return true;
        }
    }

    /** Returns the absolute value of x. */
    function int abs(int x) {
        if (x < 0) {
            return -x;
        }
        return x;
    }

    /** Returns the product of x and y. 
     *  When a Jack compiler detects the multiplication operator '*' in the 
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x*y and multiply(x,y) return the same value.
     */
    function int multiply(int x, int y) {
        var int sum, shiftX, i;
        let sum = 0;
        let shiftX = x;
        let i = 0;
        while (i < 16) {
            if (Math.bit(y, i) = true) {
                let sum = sum + shiftX;
            }
            let shiftX = shiftX + shiftX;
            let i = i + 1;
        }
        return sum;
    }

    /** Returns the integer part of x/y.
     *  When a Jack compiler detects the multiplication operator '/' in the 
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x/y and divide(x,y) return the same value.
     */
    function int divide(int x, int y) {
        var int q;
        var int absX, absY, res;
        let absX = Math.abs(x);
        let absY = Math.abs(y);

        if ((absX < absY) | (y < 0)) {
            return 0;
        }

        let q = Math.divide(absX, absY + absY);
        if (absX - (2 * q * absY) < absY) {
            let res = q * 2;
        }
        else {
            let res = q * 2 + 1;
        }

        if ((x > 0) = (y > 0)) {
            return res;
        }
        else{
            return -res;
        }
    }

    /** Returns the integer part of the square root of x. */
    function int sqrt(int x) {
        var int j, y, yPlus;
        let j = 16 / 2 - 1;
        let y = 0;
        while (j > -1) {
            let yPlus = y + twoToThe[j];
            if (~(yPlus*yPlus > x) & (yPlus*yPlus > 0)) {
                let y = yPlus;
            }
            let j = j - 1;
        }
        return y;
    }

    /** Returns the greater number. */
    function int max(int a, int b) {
        if (a > b) {
            return a;
        }
        else {
            return b;
        }
    }

    /** Returns the smaller number. */
    function int min(int a, int b) {
        if (a < b) {
            return a;
        }
        else {
            return b;
        }
    }
}
