function Square.new 0
push constant 2
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push pointer 0
return
function Square.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Square.setPosition 0
push argument 0
pop pointer 0
push argument 1
pop this 0
push argument 2
pop this 1
push constant 0
return
function Square.draw 3
push argument 0
pop pointer 0
push this 1
push constant 32
call Math.multiply 2
push this 0
push constant 16
call Math.divide 2
add
pop local 0
push constant 16384
push local 0
add
pop local 1
push local 1
pop local 2
push local 2
push constant 0
call Memory.poke 2
pop temp 0
push local 2
push constant 32
add
pop local 2
label WHILE_EXP0
push local 2
push local 1
push constant 480
add
lt
not
if-goto WHILE_END0
push local 2
push constant 32766
call Memory.poke 2
pop temp 0
push local 2
push constant 32
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
push local 2
push constant 0
call Memory.poke 2
pop temp 0
push constant 0
return
function Square.erase 3
push argument 0
pop pointer 0
push this 1
push constant 32
call Math.multiply 2
push this 0
push constant 16
call Math.divide 2
add
pop local 0
push constant 16384
push local 0
add
pop local 1
push local 1
pop local 2
label WHILE_EXP0
push local 2
push local 1
push constant 480
add
push constant 32
add
lt
not
if-goto WHILE_END0
push local 2
push constant 0
call Memory.poke 2
pop temp 0
push local 2
push constant 32
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Square.getX 0
push argument 0
pop pointer 0
push this 0
return
function Square.getY 0
push argument 0
pop pointer 0
push this 1
return
function Square.isBlack 2
push argument 0
pop pointer 0
push this 1
push constant 2
add
push constant 32
call Math.multiply 2
push this 0
push constant 2
add
push constant 16
call Math.divide 2
add
pop local 0
push constant 16384
push local 0
add
pop local 1
push local 1
call Memory.peek 1
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
goto IF_END0
label IF_FALSE0
push constant 0
not
return
label IF_END0
